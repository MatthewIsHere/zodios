"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[544],{3905:(e,r,n)=>{n.d(r,{Zo:()=>c,kt:()=>u});var t=n(7294);function o(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function i(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function a(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?i(Object(n),!0).forEach((function(r){o(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function s(e,r){if(null==e)return{};var n,t,o=function(e,r){if(null==e)return{};var n,t,o={},i=Object.keys(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||(o[n]=e[n]);return o}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=t.createContext({}),p=function(e){var r=t.useContext(l),n=r;return e&&(n="function"==typeof e?e(r):a(a({},r),e)),n},c=function(e){var r=p(e.components);return t.createElement(l.Provider,{value:r},e.children)},d={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},m=t.forwardRef((function(e,r){var n=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=p(n),u=o,f=m["".concat(l,".").concat(u)]||m[u]||d[u]||i;return n?t.createElement(f,a(a({ref:r},c),{},{components:n})):t.createElement(f,a({ref:r},c))}));function u(e,r){var n=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=m;var s={};for(var l in r)hasOwnProperty.call(r,l)&&(s[l]=r[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var p=2;p<i;p++)a[p]=n[p];return t.createElement.apply(null,a)}return t.createElement.apply(null,n)}m.displayName="MDXCreateElement"},6889:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var t=n(7462),o=(n(7294),n(3905));const i={sidebar_position:2},a="Client Error Handling",s={unversionedId:"client/error",id:"client/error",title:"Client Error Handling",description:"Error handling is a very important part of any API client. Zodios provides helpers to handle errors in a typesafe way.",source:"@site/docs/client/error.md",sourceDirName:"client",slug:"/client/error",permalink:"/docs/client/error",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Client API instance",permalink:"/docs/client/"},next:{title:"Client API plugins",permalink:"/docs/client/plugins"}},l={},p=[{value:"<code>isErrorFromPath</code>",id:"iserrorfrompath",level:2},{value:"<code>isErrorFromAlias</code>",id:"iserrorfromalias",level:2},{value:"Example",id:"example",level:2}],c={toc:p};function d(e){let{components:r,...n}=e;return(0,o.kt)("wrapper",(0,t.Z)({},c,n,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"client-error-handling"},"Client Error Handling"),(0,o.kt)("p",null,"Error handling is a very important part of any API client. Zodios provides helpers to handle errors in a typesafe way.\nIndeed, many things can go wrong when making a request to an API. The server can be down, the request can be malformed, the response can be malformed, the response can be a 404, etc."),(0,o.kt)("h2",{id:"iserrorfrompath"},(0,o.kt)("inlineCode",{parentName:"h2"},"isErrorFromPath")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"isErrorFromPath")," is a type guard that allows you to check if an error is an expected error by its path. Allowing to have typesafe error handling."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"function isErrorFromPath(api: ZodiosEndpointDefinitions, method: string, path: string, error: unknown): error is AxiosError<ErrorsFromDefinition>\n")),(0,o.kt)("h2",{id:"iserrorfromalias"},(0,o.kt)("inlineCode",{parentName:"h2"},"isErrorFromAlias")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"isErrorFromAlias")," is a type guard that allows you to check if an error is an expected error by its alias. Allowing to have typesafe error handling."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"function isErrorFromAlias(api: ZodiosEndpointDefinitions, alias: string, error: unknown): error is AxiosError<ErrorsFromDefinition>\n")),(0,o.kt)("h2",{id:"example"},"Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},'import { isErrorFromPath, makeApi, Zodios } from "@zodios/core";\n\nconst api = makeApi([\n  {\n    path: "/users/:id",\n    method: "get",\n    alias: "getUser",\n    response: z.object({\n      id: z.number(),\n      name: z.string(),\n    }),\n    errors: [\n      {\n        status: 404,\n        schema: z.object({\n          message: z.string(),\n          specificTo404: z.string(),\n        }),\n      },\n      {\n        status: \'default\',\n        schema: z.object({\n          message: z.string(),\n        }),\n      }\n    ],\n  },\n]);\n\nconst apiClient = new Zodios(api);\n\ntry {\n  const response = await apiClient.getUser({ params: { id: 1 } });\n} catch (error) {\n  // you can also do:\n  // - isErrorFromPath(zodios.api, "get", "/users/:id", error)\n  // - isErrorFromAlias(api, "getUser", error)\n  // - isErrorFromAlias(zodios.api, "getUser", error)\n  if(isErrorFromPath(api, "get", "/users/:id", error)){\n    // error type is now narrowed to an axios error with a response from the ones defined in the api\n    if(error.response.status === 404) {\n      // error.response.data is guaranteed to be of type { message: string, specificTo404: string }\n    } else {\n      // error.response.data is guaranteed to be of type { message: string }\n    }\n  }\n}\n')))}d.isMDXComponent=!0}}]);